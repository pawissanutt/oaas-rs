services:
  # Single etcd node for release testing
  etcd:
    image: quay.io/coreos/etcd:v3.6.4
    container_name: oprc-pm-etcd-release
    command:
      - /usr/local/bin/etcd
      - --name=etcd-release
      - --data-dir=/etcd-data
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://localhost:2379
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-advertise-peer-urls=http://localhost:2380
      - --initial-cluster=etcd-release=http://localhost:2380
      - --initial-cluster-token=oprc-pm-release
      - --initial-cluster-state=new
      - --log-level=info
      - --logger=zap
      - --log-outputs=stderr
      - --auto-compaction-retention=1
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - etcd_data:/etcd-data
    networks:
      - oprc-pm-release
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health", "--endpoints=http://localhost:2379"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Package Manager service for release
  oprc-pm:
    build:
      context: ../../
      dockerfile: build/Dockerfile
      args:
        APP_NAME: oprc-pm
    container_name: oprc-pm-release
    image: ${IMAGE_PREFIX:-oprc}/pm:${IMAGE_VERSION:-latest}
    ports:
      - "8080:8080"
    environment:
      OPRC_PM_STORAGE_TYPE: etcd
      OPRC_PM_ETCD_ENDPOINTS: "http://etcd:2379"
      RUST_LOG: "oprc_pm=info"
    depends_on:
      etcd:
        condition: service_healthy
    networks:
      - oprc-pm-release
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  etcd_data:
    driver: local

networks:
  oprc-pm-release:
    driver: bridge
    name: oprc-pm-release-network
