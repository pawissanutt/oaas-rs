# Combined deployment values for both CRM and PM
# Use this with: helm install oaas ./oprc-crm -f combined-deployment.yaml && helm install oaas-pm ./oprc-pm -f combined-deployment.yaml

# Common configuration
common:
  environment: staging
  imageTag: "v1.0.0-rc1"
  domain: "staging.oaas.example.com"

# CRM Configuration
crm:
  replicaCount: 2
  
  image:
    repository: ghcr.io/pawissanutt/oaas-rs/oprc-crm
    tag: "v1.0.0-rc1"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 64Mi
  
  config:
    profile: edge
    features:
      odgm: true
      knative: false
      prometheus: true
      nfrEnforcement: true
      hpa: true
    enforcement:
      stabilitySeconds: 300
      cooldownSeconds: 600
  
  # Service configuration - options for different access methods
  # Uncomment one of the following service configurations:
  
  # Option 1: ClusterIP (default - internal access only)
  # service:
  #   type: ClusterIP
  #   port: 8088
  
  # Option 2: NodePort (external access via node IP)
  # service:
  #   type: NodePort
  #   port: 8088
  #   nodePort: 30088
  
  # Option 3: LoadBalancer (cloud provider load balancer)
  # service:
  #   type: LoadBalancer
  #   port: 8088
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-staging"
      nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    hosts:
      - host: crm.staging.oaas.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: crm-staging-tls
        hosts:
          - crm.staging.oaas.example.com
  
  logging:
    level: info
    format: json

# PM Configuration
pm:
  replicaCount: 2
  
  image:
    repository: ghcr.io/pawissanutt/oaas-rs/pm
    tag: "v1.0.0-rc1"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 64Mi
  
  config:
    server:
      port: 8080
      workers: 2
    
    storage:
      type: memory  # Use etcd for production
    
    crm:
      default:
        url: "http://oaas-oprc-crm:8088"  # Reference CRM service
        timeout: 45
        retryAttempts: 3
      
      healthCheckInterval: 45
      healthCacheTtl: 20
    
    deployment:
      maxRetries: 2
      rollbackOnPartial: false
    
    package:
      deleteCascade: true
  
  # Service configuration - options for different access methods
  # Uncomment one of the following service configurations:
  
  # Option 1: ClusterIP (default - internal access only)
  # service:
  #   type: ClusterIP
  #   port: 8080
  
  # Option 2: NodePort (external access via node IP)
  # service:
  #   type: NodePort
  #   port: 8080
  #   nodePort: 30080
  
  # Option 3: LoadBalancer (cloud provider load balancer)
  # service:
  #   type: LoadBalancer
  #   port: 8080
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-staging"
      nginx.ingress.kubernetes.io/cors-allow-origin: "*"  # Adjust for staging
    hosts:
      - host: pm.staging.oaas.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: pm-staging-tls
        hosts:
          - pm.staging.oaas.example.com
  
  logging:
    level: info
    format: json

# Security settings (applied to both)
security:
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 2000
  
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
