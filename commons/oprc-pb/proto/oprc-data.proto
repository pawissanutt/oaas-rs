syntax = "proto3";
package oprc;


option java_multiple_files = true;
option java_package = "org.hpcclab.oaas.proto";

service DataService {
  rpc Get (SingleObjectRequest) returns (ObjectResponse);
  rpc GetValue (SingleKeyRequest) returns (ValueResponse);
  rpc Delete (SingleObjectRequest) returns (EmptyResponse);
  rpc Set (SetObjectRequest) returns (EmptyResponse);
  rpc SetValue (SetKeyRequest) returns (EmptyResponse);
  rpc Merge (SetObjectRequest) returns (ObjectResponse);
}
message EmptyResponse {

}

message ValueResponse {
  ValData value = 1;
}

message ObjectResponse {
  ObjData obj = 1;
}


message ObjData {
  optional ObjMeta metadata = 1;
  map<uint32, ValData> entries = 2;
  // uint64 last_updated = 3;
}

message ObjMeta {
  string cls_id = 1;
  uint32 partition_id = 2;
  uint64 object_id = 3;
}

message ValData {
  oneof data {
    bytes byte = 1;
    bytes crdt_map = 2;
  }
}

message SingleObjectRequest {
  string cls_id = 1;
  uint32 partition_id = 2;
  uint64 object_id = 3;
}

message SingleKeyRequest {
  string cls_id = 1;
  uint32 partition_id = 2;
  uint64 object_id = 3;
  uint32 key = 4;
}


message SetKeyRequest {
  string cls_id = 1;
  int32 partition_id = 2;
  uint64 object_id = 3;
  uint32 key = 4;
  ValData value = 5;
}

message SetObjectRequest {
  string cls_id = 1;
  int32 partition_id = 2;
  uint64 object_id = 3;
  ObjData object = 4;
}

message CreateCollectionRequest{
  string name = 1;
  int32 partition_count = 2;
  int32 replica_count = 3;
  repeated ShardAssignment shard_assignments = 4;
  string shard_type = 6;
  map<string, string> options = 7;
  optional InvocationRoute invocations = 8;
}

message ShardAssignment {
  optional uint64 primary = 1;
  repeated uint64 replica = 2;
  repeated uint64 shard_ids = 3;
}

message InvocationRoute{
  map<string,FuncInvokeRoute> fn_routes = 1;
}
message FuncInvokeRoute {
  string url =1;
  bool stateless = 2;
  bool standby = 3;
  repeated uint64 active_group = 4;
}


message CreateCollectionResponse {
  string name = 1;
}


message ShardGroup {
  repeated uint64 shard_ids = 1;
}
