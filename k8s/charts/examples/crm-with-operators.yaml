# CRM with Prometheus and Knative Operators enabled
# This example demonstrates how to deploy CRM with operator support
# for monitoring (Prometheus) and serverless (Knative Serving)

replicaCount: 1

image:
  repository: ghcr.io/pawissanutt/oaas-rs/crm
  tag: "latest"
  pullPolicy: Always

service:
  type: ClusterIP
  port: 8088
  targetPort: 8088

config:
  profile: full
  features:
    odgm: true
    knative: true  # Enable Knative template support in CRM
    prometheus: true
    nfrEnforcement: true
    hpa: true
  enforcement:
    stabilitySeconds: 180
    cooldownSeconds: 300

# Enable Prometheus Operator for monitoring
prometheus:
  operator:
    enabled: true
    # Prometheus Operator will be installed automatically
    # Creates ServiceMonitor and PrometheusRule resources
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels:
      app: oaas-crm
  prometheusRule:
    enabled: true
    # Alert rules for CRM health and performance
    rules:
      - alert: CRMHighCPU
        expr: rate(container_cpu_usage_seconds_total{pod=~".*oprc-crm.*"}[5m]) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "CRM CPU usage is high"
      - alert: CRMHighMemory
        expr: container_memory_usage_bytes{pod=~".*oprc-crm.*"} / container_spec_memory_limit_bytes > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "CRM memory usage is high"

# Enable Knative Operator for serverless runtime
knative:
  operator:
    enabled: true
    # Auto-install Knative Serving component
    serving:
      enabled: true
      version: ""  # Use latest version
      # Networking layer configuration
      ingress:
        kourier:
          enabled: true
        istio:
          enabled: false
        contour:
          enabled: false
      # DNS configuration
      dns:
        # Use Magic DNS (sslip.io) for development
        magic: true

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Enable autoscaling
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Enable ingress for external access
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: crm.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Enable network policies for security
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 8088
  egress:
    - to: []
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80

# Node selection and tolerations
nodeSelector: {}
tolerations: []
affinity: {}

# Additional environment variables
env:
  RUST_LOG: "info,oprc_crm=debug"
  OPRC_CRM_METRICS_ENABLED: "true"
  OPRC_CRM_TRACING_ENABLED: "true"
