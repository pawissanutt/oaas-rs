services:
  # etcd cluster for testing
  etcd1:
    image: quay.io/coreos/etcd:v3.6.4
    container_name: oprc-pm-etcd1
    command:
      - /usr/local/bin/etcd
      - --name=etcd1
      - --data-dir=/etcd-data
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://etcd1:2379
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-advertise-peer-urls=http://etcd1:2380
      - --initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - --initial-cluster-token=oprc-pm-cluster
      - --initial-cluster-state=new
      - --log-level=info
      - --logger=zap
      - --log-outputs=stderr
      - --auto-compaction-retention=1
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - etcd1_data:/etcd-data
    networks:
      - oprc-pm-test
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  etcd2:
    image: quay.io/coreos/etcd:v3.6.4
    container_name: oprc-pm-etcd2
    command:
      - /usr/local/bin/etcd
      - --name=etcd2
      - --data-dir=/etcd-data
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://etcd2:2379
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-advertise-peer-urls=http://etcd2:2380
      - --initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - --initial-cluster-token=oprc-pm-cluster
      - --initial-cluster-state=new
      - --log-level=info
      - --logger=zap
      - --log-outputs=stderr
      - --auto-compaction-retention=1
    ports:
      - "2479:2379"
      - "2480:2380"
    volumes:
      - etcd2_data:/etcd-data
    networks:
      - oprc-pm-test
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  etcd3:
    image: quay.io/coreos/etcd:v3.6.4
    container_name: oprc-pm-etcd3
    command:
      - /usr/local/bin/etcd
      - --name=etcd3
      - --data-dir=/etcd-data
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://etcd3:2379
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-advertise-peer-urls=http://etcd3:2380
      - --initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - --initial-cluster-token=oprc-pm-cluster
      - --initial-cluster-state=new
      - --log-level=info
      - --logger=zap
      - --log-outputs=stderr
      - --auto-compaction-retention=1
    ports:
      - "2579:2379"
      - "2580:2380"
    volumes:
      - etcd3_data:/etcd-data
    networks:
      - oprc-pm-test
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Package Manager service for testing
  oprc-pm:
    build:
      context: ../../
      dockerfile: build/Dockerfile
      args:
        APP_NAME: oprc-pm
    container_name: oprc-pm-test
    image: ${IMAGE_PREFIX:-oprc}/pm:${IMAGE_VERSION:-latest}
    ports:
      - "8080:8080"
    environment:
      OPRC_PM_STORAGE_TYPE: etcd
      OPRC_PM_ETCD_ENDPOINTS: "http://etcd1:2379,http://etcd2:2379,http://etcd3:2379"
      RUST_LOG: "oprc_pm=debug,info"
    depends_on:
      - etcd1
      - etcd2
      - etcd3
    networks:
      - oprc-pm-test
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # etcd client for testing/debugging
  etcd-client:
    image: quay.io/coreos/etcd:v3.6.4
    container_name: oprc-pm-etcd-client
    entrypoint: ["/bin/sh"]
    stdin_open: true
    tty: true
    environment:
      ETCDCTL_ENDPOINTS: "http://etcd1:2379,http://etcd2:2379,http://etcd3:2379"
      ETCDCTL_API: 3
    networks:
      - oprc-pm-test
    depends_on:
      - etcd1
      - etcd2
      - etcd3
    profiles:
      - debug

volumes:
  etcd1_data:
    driver: local
  etcd2_data:
    driver: local
  etcd3_data:
    driver: local

networks:
  oprc-pm-test:
    driver: bridge
    name: oprc-pm-test-network
